<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.learn.functional.java</groupId>
  <artifactId>functional-java</artifactId>
  <version>1.0-SNAPSHOT</version>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <packaging>jar</packaging>

  <name>functional-java</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <slf4jVersion>1.7.21</slf4jVersion>
    <floggerVersion>0.4</floggerVersion>
  </properties>

  <dependencies>
      <!-- We include guava just so that we can explore its capabilities -->
      <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <version>20.0</version>
      </dependency>

      <!-- Logging facade instead of plain sysout -->
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <version>${slf4jVersion}</version>
      </dependency>
      <!-- Binding for System.out -->
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
          <version>${slf4jVersion}</version>
      </dependency>

      <!-- Experimenting new logging framework from Google -->
      <dependency>
          <groupId>com.google.flogger</groupId>
          <artifactId>flogger</artifactId>
          <version>${floggerVersion}</version>
      </dependency>

      <dependency>
          <groupId>com.google.flogger</groupId>
          <artifactId>flogger-system-backend</artifactId>
          <version>${floggerVersion}</version>
          <scope>compile</scope>
      </dependency>

      <!-- Included to handle checked exception inside lambda functions -->
      <dependency>
          <groupId>org.jooq</groupId>
          <artifactId>jool-java-8</artifactId>
          <version>0.9.13</version>
      </dependency>

      <dependency>
          <groupId>com.jason-goodwin</groupId>
          <artifactId>better-monads</artifactId>
          <version>0.4.0</version>
      </dependency>

      <!-- # Junit 5 dependency -->
      <!-- # To write Junit-5 test classes/extensions, we just need the junit-jupiter-api(s) -->
      <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-api</artifactId>
          <version>5.0.0-M5</version>
          <scope>test</scope>
      </dependency>

      <!-- # This is needed to run Junit-5 tests with Junit-4 -->
      <dependency>
          <groupId>org.junit.platform</groupId>
          <artifactId>junit-platform-runner</artifactId>
          <version>1.0.0-M5</version>
          <scope>test</scope>
      </dependency>
      <!-- # To execute the Junit-5 test classes, we need the jupiter engine(and its dependencies) in the runtime classpath -->

      <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-engine</artifactId>
          <version>5.0.0-M5</version>
          <scope>test</scope>
      </dependency>
  </dependencies>
</project>
